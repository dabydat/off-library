# Docker Compose file for Off-Library microservices architecture
name: off_library_microservices

services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    ports:
      - "9000:9000"
    expose:
      - 9000
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - off_library_network

  memcached:
    container_name: memcached
    image: memcached:1.6.15
    restart: unless-stopped
    ports:
      - "11211:11211"
    expose:
      - 11211
    networks:
      - off_library_network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.3
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - off_library_network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.3
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    expose:
      - 9092
    healthcheck:
      test: nc -z localhost 9092
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - off_library_network

  gateway:
    container_name: gateway
    build:
      context: ../
      dockerfile: apps/gateway/Dockerfile
      target: development
      args:
        PORT: 8000
    image: off_library/api-gateway:dev
    restart: unless-stopped
    stop_grace_period: 5s
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - ../apps/gateway/.env
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ../apps/gateway:/app/apps/gateway
      - ../libs/common-core:/app/libs/common-core
      - ../libs/logging_provider:/app/libs/logging_provider
    networks:
      - off_library_network

  library:
    container_name: library
    build:
      context: ../
      dockerfile: apps/library/Dockerfile
      target: development
      args:
        PORT: 8001
    image: off_library/api-library:dev
    restart: unless-stopped
    stop_grace_period: 5s
    ports:
      - "8001:8001"
    expose:
      - 8001
    env_file:
      - ../apps/library/.env
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ../apps/library:/app/apps/library
      - ../libs/common-core:/app/libs/common-core
      - ../libs/logging_provider:/app/libs/logging_provider
      - ../data:/app/data
    networks:
      - off_library_network

  sqliteweb:
    container_name: sqliteweb
    image: tomdesinto/sqliteweb
    ports:
      - "8080:8080"
    volumes:
      - ../data:/db
    command: off_library.db
    networks:
      - off_library_network
    depends_on:
      - library

volumes:
  sqlite_backups:
    driver: local
  off_library_postgres:
    driver: local

networks:
  off_library_network:
    driver: bridge
